#In this SQL, I'm querying a database with multiple tables in it to quantify statistics about music sales. 

#1. Show Customers (their full names, customer ID, and country) who are not in the US. (Hint: != or <> can be used to say "is not equal to").
SELECT FirstName, LastName, CustomerId, Country
FROM customers
WHERE Country<>'USA';


#2. Show Customers (their full names, customer ID, and country) who are not in the US. (Hint: != or <> can be used to say "is not equal to").
SELECT FirstName, LastName, CustomerId, Country
FROM customers
WHERE Country = 'Brazil';

#3. Find the Invoices of customers who are from Brazil. The resulting table should show the customer's full name, Invoice ID, Date of the invoice, and billing country.

SELECT c.FirstName, c.LastName, i.InvoiceId, i.InvoiceDate, i.BillingCountry
FROM invoices i
JOIN customers c
    ON i.CustomerId=c.CustomerId
WHERE i.BillingCountry = 'Brazil';


#4. Show the Employees who are Sales Agents.
SELECT *
FROM employees
WHERE Title = 'Sales Support Agent';


#5. Find a unique/distinct list of billing countries from the Invoice table.
SELECT DISTINCT BillingCountry
FROM invoices;

#6. Provide a query that shows the invoices associated with each sales agent. The resulting table should include the Sales Agent's full name.'
SELECT e.FirstName, e.LastName, i.InvoiceId
FROM employees e 
JOIN customers c
    ON c.SupportRepId=e.EmployeeId
JOIN invoices i
    ON i.CustomerId=c.CustomerId;


#7. Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers.
SELECT i.Total, c.FirstName, c.LastName, c.Country, e.FirstName, e.LastName
FROM invoices i 
JOIN customers c
    ON i.CustomerId=c.CustomerId
JOIN employees e
    ON c.SupportRepId=e.EmployeeId
WHERE e.Title = 'Sales Support Agent';

#8. How many Invoices were there in 2009?
SELECT COUNT(InvoiceDate) total_invoice
FROM invoices 
WHERE InvoiceDate LIKE '2009%';


#9. What are the total sales for 2009?
SELECT ROUND(SUM(Total),2) total_sales
FROM invoices
WHERE InvoiceDate LIKE '2009%';

#10. Write a query that includes the purchased track name with each invoice line ID.

SELECT t.Name, it.InvoiceLineId
FROM tracks t 
JOIN invoice_items it
    ON t.TrackId=it.TrackId;
    
#11. Write a query that includes the purchased track name AND artist name with each invoice line ID.
SELECT t.Name AS track_name, ar.Name AS Artist, it.InvoiceLineId
FROM tracks t 
JOIN invoice_items it
    ON t.TrackId=it.TrackId
JOIN albums al
    ON t.AlbumId=al.AlbumId
JOIN artists ar
    ON al.ArtistId=ar.ArtistId;
    

    
#12. Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre.
SELECT t.Name AS tracks, al.Title AS album_name, mt.Name AS media_type, g.Name AS genre
FROM tracks t
JOIN media_types mt
    ON mt.MediaTypeId=t.MediaTypeId
JOIN genres g
    ON g.GenreId=t.GenreId
JOIN albums al
    ON al.AlbumId=t.AlbumId;


#13. Show the total sales made by each sales agent.
SELECT ROUND(SUM(i.Total),2) total_sales, e.FirstName, e.LastName
FROM invoices i
JOIN customers c
    ON i.InvoiceId=c.CustomerId
JOIN employees e
    ON c.SupportRepId=e.EmployeeId
WHERE e.Title = 'Sales Support Agent'
GROUP BY e.FirstName;

#14. Which sales agent made the most dollars in sales in 2009?
SELECT e.FirstName, e.LastName, ROUND(SUM(i.Total),2) total_sales
FROM employees e
JOIN customers c
    ON e.EmployeeId=c.SupportRepId
JOIN invoices i 
    ON c.CustomerId=i.InvoiceId
WHERE InvoiceDate LIKE '2009%' AND e.Title = 'Sales Support Agent'
GROUP BY e.FirstName
ORDER BY total_sales DESC
LIMIT 1;

#15. Find all the name of the playlist

SELECT p.Name
FROM media_types mt
JOIN tracks t 
    ON mt.MediaTypeId=t.MediaTypeId
JOIN playlist_track pt
    ON t.TrackId=pt.TrackId
JOIN playlists p
    ON pt.PlaylistId=p.PlaylistID 
GROUP BY p.Name;

#16. Show which artist wrote which album
SELECT ar.Name, al.Title
FROM artists ar
JOIN albums al
    ON ar.ArtistId=al.ArtistId

#17. What is the total number of invoices?
SELECT COUNT(InvoiceDate) total_invoices
FROM invoices;
GROUP BY ar.Name
